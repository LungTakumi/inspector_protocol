// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

//#include "Object.h"

{% for namespace in config.protocol.namespace %}
namespace {{namespace}} {
{% endfor %}

std::unique_ptr<Object> Object::fromValue(std::unique_ptr<protocol::Value> value, ErrorSupport* errors)
{
    auto dictionary = DictionaryValue::cast(std::move(value));
    if (!dictionary) {
        errors->addError("object expected");
        return nullptr;
    }
    return std::unique_ptr<Object>(new Object(std::move(dictionary)));
}

std::unique_ptr<protocol::DictionaryValue> Object::takeValue()
{
    return DictionaryValue::cast(std::move(m_object));
}

Object::Object(std::unique_ptr<protocol::DictionaryValue> object) : m_object(std::move(object)) { }

Object::~Object() { }

{% for namespace in config.protocol.namespace %}
} // namespace {{namespace}}
{% endfor %}
